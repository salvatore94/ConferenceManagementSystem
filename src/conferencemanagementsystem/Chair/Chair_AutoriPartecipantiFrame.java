/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package conferencemanagementsystem.Chair;

import conferencemanagementsystem.Utils.ArticoloClass;
import conferencemanagementsystem.Autore.Autore_SottomettiRivistoFrame;
import conferencemanagementsystem.Utils.UtenteClass;
import static conferencemanagementsystem.MainClass.db;
import static conferencemanagementsystem.MainClass.utente;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author salvatore
 */
public class Chair_AutoriPartecipantiFrame extends javax.swing.JFrame {

    /**
     * Creates new form Chair_AutoriPartecipanti
     */
    public Chair_AutoriPartecipantiFrame() {
        initComponents();
        preparaTabella();
    }
    
    
    private void preparaTabella() {
        Object [] colonne = {"Nome", "Cognome", "Email", "Titolo Articolo", "File", "File Rivisto"};        
        Object [] row = new Object[6];
        
        DefaultTableModel model = new DefaultTableModel();
        model.setColumnIdentifiers(colonne);
        
       String sql = "SELECT * FROM autori";
       
       PreparedStatement stat;
       ArrayList<UtenteClass> autori = new ArrayList<UtenteClass>();
       ArrayList<ArticoloClass> articoli = new ArrayList<ArticoloClass>();
        try {
            stat = db.getDBConnection().prepareStatement(sql);
            
            ResultSet result = stat.executeQuery();

            
            while(result.next()){
                UtenteClass ut = new UtenteClass();
                ut.setId(result.getInt("idUtente"));
                
                //colleziono i dati dell'autore
                String sql_utente = "SELECT * FROM utenti WHERE idUtente = ?";
                PreparedStatement stat_utente;
                stat_utente = db.getDBConnection().prepareStatement(sql_utente);
                stat_utente.setInt(1, ut.getId());
                ResultSet result_utente = stat_utente.executeQuery();
                while (result_utente.next()){
                    ut.setNome(result_utente.getString("nome"));
                    ut.setCognome(result_utente.getString("cognome"));
                    ut.setEmail(result_utente.getString("email"));
                }
                
                ArticoloClass articolo = new ArticoloClass();
                articolo.setIdArticolo(result.getInt("idArticolo"));
                
                //colleziono i dati dell'articolo
                String sql_articolo = "SELECT * FROM articoli WHERE idArticolo = ?";
                PreparedStatement stat_articolo;
                stat_articolo = db.getDBConnection().prepareStatement(sql_articolo);
                stat_articolo.setInt(1, articolo.getIdArticolo());
                ResultSet result_articolo = stat_articolo.executeQuery();
                while (result_articolo.next()){
                    articolo.setTitolo(result_articolo.getString("titolo"));
                    articolo.setFile(result_articolo.getString("file"));
                    articolo.setFile_rivisto(result_articolo.getString("file_rivisto"));
                }
                
                autori.add(ut);
                articoli.add(articolo);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Autore_SottomettiRivistoFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        for (int i=0; i < autori.size(); i++) {
            row[0] = autori.get(i).getNome();
            row[1] = autori.get(i).getCognome();
            row[2] = autori.get(i).getEmail();
            row[3] = articoli.get(i).getTitolo();
            row[4] = articoli.get(i).getFile();
            row[5] = articoli.get(i).getFile_rivisto();
            
            model.addRow(row);
           
         }
        
       table.setModel(model);

    }
    
    private UtenteClass completaUtente(int id) {
        UtenteClass temp = new UtenteClass();
        temp.setId(id);
        
        String sql = "SELECT * FROM utenti WHERE idUtente = ?";
                
        return temp;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        invia = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Lista degli Autori iscritti alla conferenza");
        jLabel1.setToolTipText("");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Cognome", "Email", "Titolo Articolo", "FILE", "File Rivisto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
        }

        invia.setText("Invia Email");
        invia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inviaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
                    .addComponent(invia, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(invia, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inviaActionPerformed
       int row = table.getSelectedRow();
       if (row != -1) {
           String emailDestinatario = (String) table.getValueAt(row, 3);
           
           Chair_ComitatoDiProgramma_InviaEmailFrame inviaF = new Chair_ComitatoDiProgramma_InviaEmailFrame();
           inviaF.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
           inviaF.setDestinatario(emailDestinatario);
           inviaF.setVisible(true);
         
       } else {
         creaJDialog("Errore", "Seleziona la riga corrispondente all'utente");
       }
    }//GEN-LAST:event_inviaActionPerformed
    
    private void creaJDialog(String title, String mess) {
        JDialog err = new JDialog(this, title, true);
          err.add(new JLabel(mess));
          
          err.setSize(250, 150);
          err.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chair_AutoriPartecipantiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chair_AutoriPartecipantiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chair_AutoriPartecipantiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chair_AutoriPartecipantiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Chair_AutoriPartecipantiFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton invia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
