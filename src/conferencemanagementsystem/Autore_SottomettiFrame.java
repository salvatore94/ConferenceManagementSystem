/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package conferencemanagementsystem;

import static conferencemanagementsystem.MainClass.conferenza;
import static conferencemanagementsystem.MainClass.db;
import static conferencemanagementsystem.MainClass.utente;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JLabel;

/**
 *
 * @author salvatore
 */
public class Autore_SottomettiFrame extends javax.swing.JFrame {

    /**
     * Creates new form AutoreForm_Sottometti
     */
    public Autore_SottomettiFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        titoloField = new javax.swing.JTextField();
        temaField = new javax.swing.JTextField();
        fileField = new javax.swing.JTextField();
        sottometti = new javax.swing.JButton();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Titolo");

        jLabel2.setText("Tema");

        jLabel3.setText("File");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(temaField)
                    .addComponent(titoloField)
                    .addComponent(fileField))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titoloField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(temaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(fileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        sottometti.setText("Sottometti");
        sottometti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sottomettiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sottometti, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(sottometti)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sottomettiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sottomettiActionPerformed
       ArticoloClass articolo = new ArticoloClass();
       
       String titolo = titoloField.getText().trim();
       String tema = temaField.getText().trim();
       String file = fileField.getText().trim();
       
       if (titolo.isEmpty() || tema.isEmpty() || file.isEmpty()) {
           creaJDialog("Errore", "Completare tutti i campi di testo");
       } else if (controllaUnivocita(titolo) == false) {
           creaJDialog("Errore", "Articolo precedentemente inserito");
       } else {
           articolo.setTitolo(titolo);
           articolo.setTema(tema);
           articolo.setFile(file);
           
           String  sql = "INSERT INTO articoli (idUtente, titolo, tema, file) " +
                     " values (?, ?, ?, ?)";
           
           PreparedStatement stat;
           try {
               stat = db.getDBConnection().prepareStatement(sql);
               stat.setInt(1, utente.getId());
               stat.setString(2, titolo);
               stat.setString(3, tema);
               stat.setString(4, file);
               
               stat.executeUpdate();
               sql = "SELECT * FROM articoli WHERE idUtente = ? AND titolo = ?";
               PreparedStatement stat_id;
               stat_id = db.getDBConnection().prepareStatement(sql);
               stat_id.setInt(1, utente.getId());
               stat_id.setString(2, titolo);
               ResultSet result_id = stat_id.executeQuery();
               while (result_id.next()) {
                   articolo.setIdArticolo(result_id.getInt("idArticolo")); 
               }
                 
               
               if (isRecensore() == false) {
                   
               sql = "UPDATE autori SET idArticolo = ? WHERE idUtente = ?";
                     PreparedStatement stat_autori;
                     stat_autori = db.getDBConnection().prepareStatement(sql);
                     stat_autori.setInt(1, articolo.getIdArticolo());
                     stat_autori.setInt(2, utente.getId());
                     stat_autori.executeUpdate();
                     
               String descrizione = "Articolo Sottomesso";
               NotificaClass notifica = new NotificaClass(conferenza.getId(), utente.getId(), articolo.getIdArticolo(), descrizione);
               
               sql = "INSERT INTO notifiche (idConferenza, idUtente, descrizione, data) VALUES (?, ?, ?, ?)";
               try {
                    stat = db.getDBConnection().prepareStatement(sql);
                    stat.setInt(1, notifica.getIdConferenza());
                    stat.setInt(2, notifica.getIdUtente());
                    stat.setString(3, notifica.getDescrizione());
                    stat.setObject(4, notifica.getData());
            
                    stat.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(Autore_IscrizioneConferenzaFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
               
               
               creaJDialog("Successo", "Articolo Sottomesso");
               this.dispose();
               
               AutoreFrame autore = new AutoreFrame();
               autore.setDefaultCloseOperation(EXIT_ON_CLOSE);
               autore.setVisible(true);
               
               } else {
               
                sql = "INSERT INTO autori (idUtente, idArticolo) VALUES (?, ?)";
                     PreparedStatement stat_autori;
                     stat_autori = db.getDBConnection().prepareStatement(sql);
                     stat_autori.setInt(1, utente.getId());
                     stat_autori.setInt(2, articolo.getIdArticolo());
                     stat_autori.executeUpdate();
                     
               String descrizione = "Recensore ha sottomesso articolo";
               NotificaClass notifica = new NotificaClass(conferenza.getId(), utente.getId(), articolo.getIdArticolo(), descrizione);
               
               sql = "INSERT INTO notifiche (idConferenza, idUtente, idArticolo, descrizione, data) VALUES (?, ?, ?, ?)";
               try {
                    stat = db.getDBConnection().prepareStatement(sql);
                    stat.setInt(1, notifica.getIdConferenza());
                    stat.setInt(2, notifica.getIdUtente());
                    stat.setInt(3, articolo.getIdArticolo());
                    stat.setString(4, notifica.getDescrizione());
                    stat.setObject(5, notifica.getData());
            
                    stat.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(Autore_IscrizioneConferenzaFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
               
               
               creaJDialog("Successo", "Articolo Sottomesso");
               this.dispose();
               RecensoreFrame recensore = new RecensoreFrame();
               recensore.setDefaultCloseOperation(EXIT_ON_CLOSE);
               recensore.setVisible(true);
               
              }
           } catch (SQLException ex) {
               Logger.getLogger(Autore_SottomettiFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
           
           
       }
    }//GEN-LAST:event_sottomettiActionPerformed
    
    private void creaJDialog(String title, String mess) {
        JDialog err = new JDialog(this, title, true);
          err.add(new JLabel(mess));
          err.setSize(250, 150);
          err.setVisible(true);
    }
    
    private boolean isRecensore() {
        boolean test = false;
        
        String sql = "SELECT * FROM comitato WHERE idUtente = ?";
        PreparedStatement stat;
        try {
            stat = db.getDBConnection().prepareStatement(sql);
            stat.setInt(1, utente.getId());
            
            ResultSet result = stat.executeQuery();
            if(result.next()) {
                test = true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Autore_SottomettiFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        return test;
    }
    
    private boolean controllaUnivocita(String _titolo){
        String sql = "SELECT * FROM articoli WHERE idUtente = ? AND titolo = ?";
        try {
            PreparedStatement stat;
            stat = db.getDBConnection().prepareStatement(sql);
            stat.setInt(1, utente.getId());
            stat.setString(2, _titolo);
            ResultSet result = stat.executeQuery();
            if (result.next()) {
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Autore_SottomettiFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Autore_SottomettiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Autore_SottomettiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Autore_SottomettiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Autore_SottomettiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Autore_SottomettiFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fileField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton sottometti;
    private javax.swing.JTextField temaField;
    private javax.swing.JTextField titoloField;
    // End of variables declaration//GEN-END:variables
}
